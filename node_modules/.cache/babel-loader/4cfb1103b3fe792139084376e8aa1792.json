{"ast":null,"code":"import _defineProperty from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import{Button}from'semantic-ui-react';import Graph from'./Graph1';var GraphContainer=/*#__PURE__*/function(_Component){_inherits(GraphContainer,_Component);function GraphContainer(){var _getPrototypeOf2;var _this;_classCallCheck(this,GraphContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(GraphContainer)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={graph:\"\",graphFile:\"\"};_this.setGraph=function(file){var xhr=new XMLHttpRequest();xhr.open('GET',file,true);// If specified, responseType must be empty string or \"text\"\nxhr.responseType='text';xhr.onload=function(){if(xhr.readyState===xhr.DONE&&_this.state.graph!==xhr.responseText){if(xhr.status===200){_this.setState(_objectSpread({},_this.state,{graph:xhr.responseText,graphFile:file}));}}};xhr.send(null);};return _this;}_createClass(GraphContainer,[{key:\"componentDidMount\",value:function componentDidMount(){// Create file name from selection\nvar zeros=9-Number(this.props.selection[0]);var file=\"grid\"+\"0\".repeat(zeros);if(this.props.selection[2]===\"1\"){file+=\"_Z_1_n_\";}else{file+=\"_Z_0p1_n_\";}file+=this.props.selection[3]+\"_\"+this.props.selection[1]+\"per.con\";// Set configuration file to state\nthis.setGraph(\"data/\"+file);}},{key:\"render\",value:function render(){return React.createElement(React.Fragment,null,this.state.graph===\"\"?null:React.createElement(Graph,{graph:this.state.graph}),React.createElement(\"a\",{href:this.state.graphFile,download:true},React.createElement(Button,null,\"Download Configuration File\")));}}]);return GraphContainer;}(Component);export default GraphContainer;","map":{"version":3,"sources":["/Users/amethyst/black-hole-viewer/src/components/GraphContainer.js"],"names":["React","Component","Button","Graph","GraphContainer","state","graph","graphFile","setGraph","file","xhr","XMLHttpRequest","open","responseType","onload","readyState","DONE","responseText","status","setState","send","zeros","Number","props","selection","repeat"],"mappings":"o+CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAAQC,MAAR,KAAqB,mBAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,C,GACMC,CAAAA,c,+ZACJC,K,CAAQ,CACNC,KAAK,CAAE,EADD,CAENC,SAAS,CAAE,EAFL,C,OAmBRC,Q,CAAW,SAAAC,IAAI,CAAI,CACjB,GAAIC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,cAAJ,EAAV,CACAD,GAAG,CAACE,IAAJ,CAAS,KAAT,CAAgBH,IAAhB,CAAuB,IAAvB,EACA;AACAC,GAAG,CAACG,YAAJ,CAAmB,MAAnB,CAEAH,GAAG,CAACI,MAAJ,CAAa,UAAM,CACjB,GAAIJ,GAAG,CAACK,UAAJ,GAAmBL,GAAG,CAACM,IAAvB,EAA+B,MAAKX,KAAL,CAAWC,KAAX,GAAqBI,GAAG,CAACO,YAA5D,CAA0E,CACtE,GAAIP,GAAG,CAACQ,MAAJ,GAAe,GAAnB,CAAwB,CACpB,MAAKC,QAAL,kBAAkB,MAAKd,KAAvB,EAA8BC,KAAK,CAAEI,GAAG,CAACO,YAAzC,CAAuDV,SAAS,CAAEE,IAAlE,IAED,CACF,CACF,CAPL,CAQIC,GAAG,CAACU,IAAJ,CAAS,IAAT,EACH,C,uGA7BiB,CAChB;AACA,GAAIC,CAAAA,KAAK,CAAG,EAAIC,MAAM,CAAC,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAD,CAAtB,CACA,GAAIf,CAAAA,IAAI,CAAG,OAAS,IAAIgB,MAAJ,CAAWJ,KAAX,CAApB,CACA,GAAG,KAAKE,KAAL,CAAWC,SAAX,CAAqB,CAArB,IAA4B,GAA/B,CAAoC,CAClCf,IAAI,EAAI,SAAR,CACD,CAFD,IAEO,CACLA,IAAI,EAAI,WAAR,CACD,CACDA,IAAI,EAAI,KAAKc,KAAL,CAAWC,SAAX,CAAqB,CAArB,EAA0B,GAA1B,CAAgC,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAhC,CAA0D,SAAlE,CACA;AACA,KAAKhB,QAAL,CAAc,QAAUC,IAAxB,EACH,C,uCAmBQ,CACP,MACE,yCACC,KAAKJ,KAAL,CAAWC,KAAX,GAAqB,EAArB,CAA0B,IAA1B,CACC,oBAAC,KAAD,EAAO,KAAK,CAAE,KAAKD,KAAL,CAAWC,KAAzB,EAFF,CAIA,yBAAG,IAAI,CAAE,KAAKD,KAAL,CAAWE,SAApB,CAA+B,QAAQ,KAAvC,EACA,oBAAC,MAAD,oCADA,CAJA,CADF,CAYD,C,4BAlD0BN,S,EAsD7B,cAAeG,CAAAA,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Button} from 'semantic-ui-react'\nimport Graph from './Graph1'\nclass GraphContainer extends Component {\n  state = {\n    graph: \"\",\n    graphFile: \"\"\n  }\n\n  componentDidMount() {\n      // Create file name from selection\n      let zeros = 9 - Number(this.props.selection[0])\n      let file = \"grid\" + \"0\".repeat(zeros)\n      if(this.props.selection[2] === \"1\") {\n        file += \"_Z_1_n_\"\n      } else {\n        file += \"_Z_0p1_n_\"\n      }\n      file += this.props.selection[3] + \"_\" + this.props.selection[1] + \"per.con\"\n      // Set configuration file to state\n      this.setGraph(\"data/\" + file)\n  }\n\n  setGraph = file => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', file , true);\n    // If specified, responseType must be empty string or \"text\"\n    xhr.responseType = 'text';\n\n    xhr.onload = () => {\n      if (xhr.readyState === xhr.DONE && this.state.graph !== xhr.responseText) {\n          if (xhr.status === 200) {\n              this.setState({...this.state, graph: xhr.responseText, graphFile: file})\n\n            }\n          }\n        }\n        xhr.send(null);\n    }\n\n  render() {\n    return (\n      <>\n      {this.state.graph === \"\" ? null :\n        <Graph graph={this.state.graph}/>\n      }\n      <a href={this.state.graphFile} download >\n      <Button>\n      Download Configuration File\n      </Button>\n      </a>\n      </>\n    );\n  }\n\n}\n\nexport default GraphContainer;\n"]},"metadata":{},"sourceType":"module"}