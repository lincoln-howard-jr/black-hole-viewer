{"ast":null,"code":"import _defineProperty from \"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/amethyst/black-hole-viewer/src/components/GraphContainer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport Graph from './Graph';\nimport Graph1 from './Graph1';\n\nclass GraphContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      graph: \"\",\n      graphFile: \"\"\n    };\n\n    this.setGraph = file => {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', file, true); // If specified, responseType must be empty string or \"text\"\n\n      xhr.responseType = 'text';\n\n      xhr.onload = () => {\n        if (xhr.readyState === xhr.DONE && this.state.graph !== xhr.responseText) {\n          if (xhr.status === 200) {\n            this.setState(_objectSpread({}, this.state, {\n              graph: xhr.responseText,\n              graphFile: file\n            }));\n          }\n        }\n      };\n\n      xhr.send(null);\n    };\n  }\n\n  componentDidMount() {\n    // Create file name from selection\n    let zeros = 9 - Number(this.props.selection[0]);\n    let file = \"grid\" + \"0\".repeat(zeros);\n\n    if (this.props.selection[2] === \"1\") {\n      file += \"_Z_1_n_\";\n    } else {\n      file += \"_Z_0p1_n_\";\n    }\n\n    file += this.props.selection[3] + \"_\" + this.props.selection[1] + \"per.con\"; // Set configuration file to state\n\n    this.setGraph(\"data/\" + file);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.state.graph === \"\" ? null : React.createElement(Graph, {\n      graph: this.state.graph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: this.state.graphFile,\n      download: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Download Configuration File\")), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Change Graph\"));\n  }\n\n}\n\nexport default GraphContainer;","map":{"version":3,"sources":["/Users/amethyst/black-hole-viewer/src/components/GraphContainer.js"],"names":["React","Component","Button","Graph","Graph1","GraphContainer","state","graph","graphFile","setGraph","file","xhr","XMLHttpRequest","open","responseType","onload","readyState","DONE","responseText","status","setState","send","componentDidMount","zeros","Number","props","selection","repeat","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,MAAR,QAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCK,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD6B;;AAAA,SAoBrCC,QApBqC,GAoB1BC,IAAI,IAAI;AACjB,UAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBH,IAAhB,EAAuB,IAAvB,EAFiB,CAGjB;;AACAC,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;AAEAH,MAAAA,GAAG,CAACI,MAAJ,GAAa,MAAM;AACjB,YAAIJ,GAAG,CAACK,UAAJ,KAAmBL,GAAG,CAACM,IAAvB,IAA+B,KAAKX,KAAL,CAAWC,KAAX,KAAqBI,GAAG,CAACO,YAA5D,EAA0E;AACtE,cAAIP,GAAG,CAACQ,MAAJ,KAAe,GAAnB,EAAwB;AACpB,iBAAKC,QAAL,mBAAkB,KAAKd,KAAvB;AAA8BC,cAAAA,KAAK,EAAEI,GAAG,CAACO,YAAzC;AAAuDV,cAAAA,SAAS,EAAEE;AAAlE;AAED;AACF;AACF,OAPL;;AAQIC,MAAAA,GAAG,CAACU,IAAJ,CAAS,IAAT;AACH,KAnCkC;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIC,KAAK,GAAG,IAAIC,MAAM,CAAC,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAD,CAAtB;AACA,QAAIhB,IAAI,GAAG,SAAS,IAAIiB,MAAJ,CAAWJ,KAAX,CAApB;;AACA,QAAG,KAAKE,KAAL,CAAWC,SAAX,CAAqB,CAArB,MAA4B,GAA/B,EAAoC;AAClChB,MAAAA,IAAI,IAAI,SAAR;AACD,KAFD,MAEO;AACLA,MAAAA,IAAI,IAAI,WAAR;AACD;;AACDA,IAAAA,IAAI,IAAI,KAAKe,KAAL,CAAWC,SAAX,CAAqB,CAArB,IAA0B,GAA1B,GAAgC,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAhC,GAA0D,SAAlE,CATgB,CAUhB;;AACA,SAAKjB,QAAL,CAAc,UAAUC,IAAxB;AACH;;AAmBDkB,EAAAA,MAAM,GAAG;AACP,WACE,0CACC,KAAKtB,KAAL,CAAWC,KAAX,KAAqB,EAArB,GAA0B,IAA1B,GACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIA;AAAG,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,SAApB;AAA+B,MAAA,QAAQ,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADA,CAJA,EASA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATA,CADF;AAeD;;AArDoC;;AAyDvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Button} from 'semantic-ui-react'\nimport Graph from './Graph'\nimport Graph1 from './Graph1'\n\nclass GraphContainer extends Component {\n  state = {\n    graph: \"\",\n    graphFile: \"\"\n  }\n\n  componentDidMount() {\n      // Create file name from selection\n      let zeros = 9 - Number(this.props.selection[0])\n      let file = \"grid\" + \"0\".repeat(zeros)\n      if(this.props.selection[2] === \"1\") {\n        file += \"_Z_1_n_\"\n      } else {\n        file += \"_Z_0p1_n_\"\n      }\n      file += this.props.selection[3] + \"_\" + this.props.selection[1] + \"per.con\"\n      // Set configuration file to state\n      this.setGraph(\"data/\" + file)\n  }\n\n  setGraph = file => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', file , true);\n    // If specified, responseType must be empty string or \"text\"\n    xhr.responseType = 'text';\n\n    xhr.onload = () => {\n      if (xhr.readyState === xhr.DONE && this.state.graph !== xhr.responseText) {\n          if (xhr.status === 200) {\n              this.setState({...this.state, graph: xhr.responseText, graphFile: file})\n\n            }\n          }\n        }\n        xhr.send(null);\n    }\n\n  render() {\n    return (\n      <>\n      {this.state.graph === \"\" ? null :\n        <Graph graph={this.state.graph}/>\n      }\n      <a href={this.state.graphFile} download >\n      <Button>\n      Download Configuration File\n      </Button>\n      </a>\n      <Button>\n      Change Graph\n      </Button>\n      </>\n    );\n  }\n\n}\n\nexport default GraphContainer;\n"]},"metadata":{},"sourceType":"module"}