{"ast":null,"code":"import _toConsumableArray from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/amethyst/black-hole-viewer/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from'react';import Chart from\"react-google-charts\";var Graph=/*#__PURE__*/function(_Component){_inherits(Graph,_Component);function Graph(){var _getPrototypeOf2;var _this;_classCallCheck(this,Graph);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Graph)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={data:[],max_x:null,max_y:null,min_x:null,min_y:null};return _this;}_createClass(Graph,[{key:\"componentDidMount\",value:function componentDidMount(){// filter out data that will not be graphed\nvar graph=this.props.graph;graph=graph.split(/(\\s+)/).filter(function(value){return value.includes(\"e\")&&value.length>6;});graph.shift();// console.log(graph)\n// extract data that will be graphed\nvar data_set=[];var data_point={};var counter=0;var nu_counter=0;var total_counter=6;var max_x=0;var min_x=graph[0];var min_y=graph[6];var max_y=0;graph.forEach(function(value){if(counter-nu_counter===0){nu_counter+=9;data_point.x=Number(value);if(Number(value)>max_x){max_x=Number(value);}if(Number(value)<min_x){min_x=Number(value);}}if(counter-total_counter===0){total_counter+=9;data_point.y=Number(value);data_set.push([data_point.x,data_point.y]);data_point={};if(Number(value)>max_y){max_y=Number(value);}if(Number(value)<min_y){min_y=Number(value);}}counter++;});// console.log(data_set)\nthis.setState(_objectSpread({},this.state,{data:data_set,max_x:max_x,max_y:max_y,min_x:min_x,min_y:min_y}));}},{key:\"render\",value:function render(){return React.createElement(Chart,{chartType:\"LineChart\",loader:React.createElement(\"div\",null,\"Loading Chart\"),data:[['Cont nu','Total']].concat(_toConsumableArray(this.state.data)),options:{intervals:{style:'sticks'},legend:'none',chartArea:{width:'75%'},hAxis:{title:'Cont nu',scaleType:'log',format:'scientific'},vAxis:{title:'Total',scaleType:'log',format:'scientific'}}});}}]);return Graph;}(Component);export{Graph as default};","map":{"version":3,"sources":["/Users/amethyst/black-hole-viewer/src/components/Graph1.js"],"names":["React","Component","Chart","Graph","state","data","max_x","max_y","min_x","min_y","graph","props","split","filter","value","includes","length","shift","data_set","data_point","counter","nu_counter","total_counter","forEach","x","Number","y","push","setState","intervals","style","legend","chartArea","width","hAxis","title","scaleType","format","vAxis"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Chart from \"react-google-charts\"\n\nexport default class Graph extends Component {\n    state = {\n      data: [],\n      max_x: null,\n      max_y: null,\n      min_x: null,\n      min_y: null\n    }\n\n    componentDidMount() {\n      // filter out data that will not be graphed\n      let graph = this.props.graph\n      graph = graph.split(/(\\s+)/).filter((value) => {\n        return value.includes(\"e\") && value.length > 6\n      })\n      graph.shift()\n      // console.log(graph)\n      // extract data that will be graphed\n      let data_set = []\n      let data_point = {}\n      let counter = 0\n      let nu_counter = 0\n      let total_counter = 6\n      let max_x = 0\n      let min_x = graph[0]\n      let min_y = graph[6]\n      let max_y = 0\n      graph.forEach((value) => {\n        if(counter - nu_counter === 0) {\n          nu_counter += 9\n          data_point.x = Number(value)\n          if(Number(value) > max_x) {\n            max_x = Number(value)\n          }\n          if(Number(value) < min_x) {\n            min_x = Number(value)\n          }\n        }\n        if(counter - total_counter === 0) {\n          total_counter += 9\n          data_point.y = Number(value)\n          data_set.push([data_point.x, data_point.y])\n          data_point = {}\n          if(Number(value) > max_y) {\n            max_y = Number(value)\n          }\n          if(Number(value) < min_y) {\n            min_y = Number(value)\n          }\n        }\n        counter ++\n      })\n      // console.log(data_set)\n      this.setState({...this.state, data: data_set, max_x: max_x, max_y: max_y, min_x: min_x, min_y: min_y})\n    }\n\n    render() {\n        return (\n            <Chart\n    chartType=\"LineChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['Cont nu', 'Total'],\n      ...this.state.data\n    ]}\n    options={{\n      intervals: { style: 'sticks' },\n      legend: 'none',\n      chartArea: { width: '75%' },\n      hAxis: {\n        title: 'Cont nu',\n        scaleType: 'log',\n        format: 'scientific'\n      },\n      vAxis: {\n        title: 'Total',\n        scaleType: 'log',\n        format: 'scientific'\n      },\n    }}\n\n  />\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}