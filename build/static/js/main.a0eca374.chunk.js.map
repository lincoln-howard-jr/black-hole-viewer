{"version":3,"sources":["components/Lines.js","components/Graph1.js","components/GraphContainer.js","App.js","serviceWorker.js","index.js"],"names":["Lines","renderList","index","selectionWithHeader","props","selection","map","value","comFile","data","splice","sort","a","b","Number","List","divided","relaxed","style","this","item","Item","key","Header","Description","Component","Graph","state","max_x","max_y","min_x","min_y","graph","split","filter","includes","length","shift","data_set","data_point","counter","nu_counter","total_counter","forEach","x","y","push","setState","chartType","loader","options","intervals","legend","chartArea","width","hAxis","title","scaleType","format","vAxis","GraphContainer","graphFile","setGraph","file","xhr","XMLHttpRequest","open","responseType","onload","readyState","DONE","responseText","status","send","zeros","repeat","href","download","Button","App","agn","z","n","r","nh","warning","handleClick","e","parseFloat","handleChange","newState","target","id","Papa","parse","complete","results","Grid","container","columns","stackable","Column","textAlign","as","Input","label","onChange","placeholder","padding","onClick","margin","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0eca374.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {List} from 'semantic-ui-react'\n\n\nclass Lines extends Component {\n\n  // Fromat selection to display top 50 brightest lines\n  renderList = () => {\n    let index = 0\n    let selectionWithHeader = this.props.selection.map((value) => {\n      index += 1\n      return [this.props.comFile.data[0][index - 1], value]\n    })\n    selectionWithHeader.splice(0, 7)\n    selectionWithHeader = selectionWithHeader.sort((a, b) => {\n      return Number(b[1]) - Number(a[1])\n    }).splice(0,49)\n    return selectionWithHeader\n  }\n\n  render() {\n    return (\n      <List divided relaxed style={{\"paddingTop\": \"30px\"}}>\n      {this.renderList().map((item) => {\n        return <List.Item key={item[0]}>\n        <List.Header>{item[0]}</List.Header>\n        <List.Description >{item[1]}</List.Description>\n        </List.Item>\n      })}\n  </List>\n    );\n  }\n\n}\n\nexport default Lines;\n","import React, { Component } from 'react'\nimport Chart from \"react-google-charts\"\n\nexport default class Graph extends Component {\n    state = {\n      data: [],\n      max_x: null,\n      max_y: null,\n      min_x: null,\n      min_y: null\n    }\n\n    componentDidMount() {\n      // filter out data that will not be graphed\n      let graph = this.props.graph\n      graph = graph.split(/(\\s+)/).filter((value) => {\n        return value.includes(\"e\") && value.length > 6\n      })\n      graph.shift()\n      // console.log(graph)\n      // extract data that will be graphed\n      let data_set = []\n      let data_point = {}\n      let counter = 0\n      let nu_counter = 0\n      let total_counter = 6\n      let max_x = 0\n      let min_x = graph[0]\n      let min_y = graph[6]\n      let max_y = 0\n      graph.forEach((value) => {\n        if(counter - nu_counter === 0) {\n          nu_counter += 9\n          data_point.x = Number(value)\n          if(Number(value) > max_x) {\n            max_x = Number(value)\n          }\n          if(Number(value) < min_x) {\n            min_x = Number(value)\n          }\n        }\n        if(counter - total_counter === 0) {\n          total_counter += 9\n          data_point.y = Number(value)\n          data_set.push([data_point.x, data_point.y])\n          data_point = {}\n          if(Number(value) > max_y) {\n            max_y = Number(value)\n          }\n          if(Number(value) < min_y) {\n            min_y = Number(value)\n          }\n        }\n        counter ++\n      })\n      // console.log(data_set)\n      this.setState({...this.state, data: data_set, max_x: max_x, max_y: max_y, min_x: min_x, min_y: min_y})\n    }\n\n    render() {\n        return (\n            <Chart\n    chartType=\"LineChart\"\n    loader={<div>Loading Chart</div>}\n    data={[\n      ['Cont nu', 'Total'],\n      ...this.state.data\n    ]}\n    options={{\n      intervals: { style: 'sticks' },\n      legend: 'none',\n      chartArea: { width: '75%' },\n      hAxis: {\n        title: 'Total',\n        scaleType: 'log',\n        format: 'scientific'\n      },\n      vAxis: {\n        title: 'Cont nu',\n        scaleType: 'log',\n        format: 'scientific'\n      },\n    }}\n\n  />\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Button} from 'semantic-ui-react'\nimport Graph from './Graph1'\nclass GraphContainer extends Component {\n  state = {\n    graph: \"\",\n    graphFile: \"\"\n  }\n\n  componentDidMount() {\n      // Create file name from selection\n      let zeros = 9 - Number(this.props.selection[0])\n      let file = \"grid\" + \"0\".repeat(zeros)\n      if(this.props.selection[2] === \"1\") {\n        file += \"_Z_1_n_\"\n      } else {\n        file += \"_Z_0p1_n_\"\n      }\n      file += this.props.selection[3] + \"_\" + this.props.selection[1] + \"per.con\"\n      // Set configuration file to state\n      this.setGraph(\"data/\" + file)\n  }\n\n  setGraph = file => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', file , true);\n    // If specified, responseType must be empty string or \"text\"\n    xhr.responseType = 'text';\n\n    xhr.onload = () => {\n      if (xhr.readyState === xhr.DONE && this.state.graph !== xhr.responseText) {\n          if (xhr.status === 200) {\n              this.setState({...this.state, graph: xhr.responseText, graphFile: file})\n\n            }\n          }\n        }\n        xhr.send(null);\n    }\n\n  render() {\n    return (\n      <>\n      {this.state.graph === \"\" ? null :\n        <Graph graph={this.state.graph}/>\n      }\n      <a href={this.state.graphFile} download >\n      <Button>\n      Download Configuration File\n      </Button>\n      </a>\n      </>\n    );\n  }\n\n}\n\nexport default GraphContainer;\n","import React, { Component } from 'react';\nimport Lines from './components/Lines'\nimport GraphContainer from './components/GraphContainer'\nimport Papa from 'papaparse';\nimport './App.css';\nimport { Button, Grid, Header, Input } from 'semantic-ui-react'\nimport 'semantic-ui-css/semantic.min.css'\n\n\n\n\nclass App extends Component {\n  state = {\n    comFile: null,\n    selection: [],\n    agn: \"10\", // index 1\n    z: \"1\", // index 2\n    n: \"300\", // index 3\n    r: \"21.6\", // index 4\n    nh: \"20\", // index 5,\n    warning: false\n  }\n\n  handleClick = (e) => {\n    let selection = this.state.comFile.data.filter((item) => {\n      return parseFloat(item[1]) === parseFloat(this.state.agn) && parseFloat(item[2]) === parseFloat(this.state.z) && parseFloat(item[3]) === parseFloat(this.state.n) && parseFloat(item[4]) === parseFloat(this.state.r) && parseFloat(item[5]) === parseFloat(this.state.nh)\n    })\n    if(selection.length === 0) {\n\n    }else {\n      this.setState({...this.state, selection: selection[0]})\n    }\n  }\n\n  handleChange = (e) => {\n    let newState = {...this.state}\n    newState[e.target.id] = e.target.value\n    this.setState(newState)\n  }\n\n  componentDidMount() {\n    Papa.parse(\"combinedFile.csv\", {\n\tdownload: true,\n\tcomplete: (results) => {\n          this.setState({...this.state, comFile: results})\n\t     }\n    })\n  }\n\n  render() {\n    return (\n      <Grid container columns={3} divided relaxed stackable style={{\"paddingTop\": \"30px\", \"width\":\"100%\"}} id=\"grid-container\">\n        <Grid.Column textAlign='center' id=\"col-1\">\n        <Header as='h3' >\n      Input Form\n      </Header>\n      <Input id='agn' label='AGN' value={this.state.agn} onChange={this.handleChange} placeholder='' style={{padding: \"5px\"}}/>\n      <br/>\n      <Input id='z' label='Z' value={this.state.z} onChange={this.handleChange} placeholder='' style={{padding: \"5px\"}}/>\n      <br/>\n      <Input id='n' label='N' value={this.state.n} onChange={this.handleChange} placeholder='' style={{padding: \"5px\"}}/>\n      <br/>\n      <Input id='nh' label='NH' value={this.state.nh} onChange={this.handleChange} placeholder='' style={{padding: \"5px\"}}/>\n      <br/>\n      <Input id='r' label='R' value={this.state.r} onChange={this.handleChange} placeholder='' style={{padding: \"5px\"}}/>\n      <br/>\n      <Button onClick={this.handleClick} style={{margin: \"5px\", width: \"154px\", height: \"37px\"}}>\n      Submit\n      </Button>\n        </Grid.Column>\n\n        <Grid.Column textAlign='center' id=\"col-2\">\n        <Header as='h3'>\n      Graph\n      </Header>\n      {!this.state.selection.length > 0 ? null :\n        <GraphContainer selection={this.state.selection}/>\n      }\n        </Grid.Column>\n        <Grid.Column textAlign='center' id=\"col-3\">\n        <Header as='h3'>\n      Top 50 Brightest lines\n      <Lines selection={this.state.selection} comFile={this.state.comFile}/>\n      </Header>\n        </Grid.Column>\n      </Grid>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}