{"version":3,"sources":["components/TemporaryDrawer.js","components/WelcomePage.js","components/PersistentDrawerLeft.js","components/ButtonAppBar.js","serviceWorker.js","index.js","App.js"],"names":["useStyles","makeStyles","theme","list","width","formControl","margin","spacing","minWidth","TemporaryDrawer","props","classes","React","useState","agn","z","n","nh","logU","state","setState","toggleDrawer","open","event","type","key","toggleInput","inputs","name","values","handleChange","target","value","IconButton","onClick","edge","className","menuButton","color","aria-label","Drawer","anchor","inputOpen","onClose","role","List","map","input","index","FormControl","InputLabel","id","toUpperCase","Select","labelId","onChange","MenuItem","TextField","label","Button","variant","root","padding","textAlign","button","marginTop","WelcomePage","Paper","Typography","component","display","title","flexGrow","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","PersistentDrawerLeft","useTheme","useEffect","setOpen","setInputOpen","comFile","setComFile","setGraphFile","setSelection","fileName","selection","zeros","length","file","repeat","getData","xhr","XMLHttpRequest","responseType","onload","readyState","DONE","graphContents","responseText","status","setData","extractData","send","graph","split","filter","includes","data_set","data_point","counter","nu_counter","total_counter","max_x","min_x","min_y","max_y","forEach","x","Number","y","push","Papa","parse","download","complete","results","handleDrawerClose","CssBaseline","AppBar","position","clsx","Toolbar","noWrap","updateApp","inputState","data","item","parseFloat","r","console","log","paper","direction","Divider","text","ListItem","ListItemIcon","ListItemText","primary","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eb541161.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport List from '@material-ui/core/List';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  list: {\n    width: 250,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n  }\n}));\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    agn: \"\",\n    z: \"\",\n    n: \"\",\n    nh: \"\",\n    logU: \"\"\n  })\n\n  const toggleDrawer = (open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    props.toggleInput(open)\n  };\n\n  const inputs = [\n    {\n      name: \"agn\",\n      values: [0,5,10,20,40,60,80,100]\n    },\n    {\n      name: \"z\",\n      values: [1, 0.1]\n    },\n    {\n      name: \"n\",\n      values: [300, 1000]\n    },\n    {\n      name: \"nh\",\n      values: [20,21,22,23]\n    }\n  ]\n\n  const handleChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n    >\n    <List>\n\n      {inputs.map((input, index) => (\n        <FormControl className={classes.formControl} key={index}>\n        <InputLabel id=\"demo-simple-select-label\">{input.name.toUpperCase()}</InputLabel>\n        <Select\n            labelId=\"select-label\"\n            id=\"select\"\n            name={input.name}\n            value={state[input.name]}\n            onChange={handleChange}\n          >\n          {input.values.map((value, index) => {\n            return <MenuItem key={index} value={value}>{value}</MenuItem>\n          })}\n      </Select>\n      </FormControl>\n      ))}\n      <FormControl className={classes.formControl}>\n       <TextField value={state.logU} onChange={handleChange} name=\"logU\" id=\"standard-basic\" label=\"LogU\" />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n      <Button variant=\"contained\" color=\"primary\">\n        Submit\n      </Button>\n      </FormControl>\n    </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <IconButton onClick={toggleDrawer(true)}edge=\"end\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n        <SettingsIcon />\n      </IconButton>\n      <Drawer anchor=\"right\" open={props.inputOpen} onClose={toggleDrawer(false)}>\n        {sideList('open')}\n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    textAlign: 'center'\n  },\n  button: {\n    marginTop: \"20px\"\n  }\n}));\n\nexport default function WelcomePage(props) {\n  const classes = useStyles();\n\n  const handleClick = event => {\n    props.toggleInput(true)\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"h5\" component=\"h3\">\n        Welcome to Black Hole Viewer.\n      </Typography>\n      <Typography component=\"p\">\n        This is a tool for visualizing data associated with black holes.\n      </Typography>\n      <Button onClick={handleClick} variant=\"contained\" color=\"primary\" className={classes.button}>Get Started</Button>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport TemporaryDrawer from './TemporaryDrawer'\nimport WelcomePage from './WelcomePage'\nimport Papa from 'papaparse';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const useEffect = React.useEffect\n  const useState = React.useState\n  const [open, setOpen] = useState(false)\n  const [inputOpen, setInputOpen] = useState(false)\n  const [comFile, setComFile] = useState(null)\n  const [graphFile, setGraphFile] = useState(null)\n  const [selection, setSelection] = useState([]) // Used to display top 50 brightest lines\n  const [data, setData] = useState([]) // Data for graph\n\n\n  const updateApp = (inputState) => {\n    let selection = comFile.data.filter((item) => {\n      return parseFloat(item[1]) === parseFloat(inputState.agn) && parseFloat(item[2]) === parseFloat(inputState.z) && parseFloat(item[3]) === parseFloat(inputState.n) && parseFloat(item[4]) === parseFloat(inputState.r) && parseFloat(item[5]) === parseFloat(inputState.nh)\n    })\n    if(selection.length === 0) {\n      // Warn user that input is invalid\n      console.log(\"invalid input\")\n    }else {\n      console.log(\"Graph updated\")\n      // update graph and top 50 brightest lines\n      let file = fileName(selection[0])\n      setSelection(selection[0])\n      setGraphFile(file)\n      getData(file)\n    }\n  }\n\n  const fileName = (selection) => {\n    // Create file name from selection\n    let zeros = 9 - selection[0].length\n    // debugger\n    let file = \"grid\" + \"0\".repeat(zeros) + selection[0]\n    if(selection[2] === \"1\") {\n      file += \"_Z_1_n_\"\n    } else {\n      file += \"_Z_0p1_n_\"\n    }\n    file += selection[3] + \"_\" + selection[1] + \"per.con\"\n    // Set configuration file to state\n    return (\"data/\" + file)\n  }\n\n  const getData = file => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', file , true);\n    // If specified, responseType must be empty string or \"text\"\n    xhr.responseType = 'text';\n\n    xhr.onload = () => {\n      if (xhr.readyState === xhr.DONE && this.state.graphContents !== xhr.responseText) {\n          if (xhr.status === 200) {\n              this.setData(extractData(xhr.responseText))\n            }\n          }\n        }\n        xhr.send(null);\n  }\n\n  const extractData = graph => {\n    graph = graph.split(/(\\s+)/).filter((value) => {\n      return value.includes(\"e\") && value.length > 6 && !value.includes(\"i\")\n    })\n\n    // extract data that will be graphed\n    let data_set = []\n    let data_point = {}\n    let counter = 0\n    let nu_counter = 0\n    let total_counter = 6\n    let max_x = 0\n    let min_x = graph[0]\n    let min_y = graph[6]\n    let max_y = 0\n    graph.forEach((value) => {\n      if(counter - nu_counter === 0) {\n        nu_counter += 9\n        data_point.x = Number(value)\n        if(Number(value) > max_x) {\n          max_x = Number(value)\n        }\n        if(Number(value) < min_x) {\n          min_x = Number(value)\n        }\n      }\n      if(counter - total_counter === 0) {\n        total_counter += 9\n        data_point.y = Number(value)\n        data_set.push([data_point.x, data_point.y])\n        data_point = {}\n        if(Number(value) > max_y) {\n          max_y = Number(value)\n        }\n        if(Number(value) < min_y) {\n          min_y = Number(value)\n        }\n      }\n      counter ++\n    })\n    return data_set\n  }\n\n  useEffect(() => {\n    Papa.parse(\"combinedFile.csv\", {\n      download: true,\n      complete: (results) => {\n          setComFile(results)\n       }\n    })\n  })\n\n  const toggleInput = (open) => {\n    setInputOpen(open)\n  }\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  };\n\n  const drawer = () => {\n    return <Drawer\n      className={classes.drawer}\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={open}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={handleDrawerClose}>\n          {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n        </IconButton>\n      </div>\n      <Divider />\n      <List>\n        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <List>\n        {['All mail', 'Trash', 'Spam'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Drawer>\n  }\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n            Graph\n          </Typography>\n          <TemporaryDrawer\n            updateApp={updateApp}\n            inputOpen={inputOpen} toggleInput={toggleInput}/>\n        </Toolbar>\n      </AppBar>\n      {drawer()}\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <WelcomePage toggleInput={toggleInput}/>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TemporaryDrawer from './TemporaryDrawer'\nimport PersistentDrawerLeft from './PersistentDrawerLeft'\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n        <PersistentDrawerLeft />\n\n          <Typography variant=\"h6\" className={classes.title}>\n\n          </Typography>\n\n          <TemporaryDrawer />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport ButtonAppBar from './components/ButtonAppBar'\nimport PersistentDrawerLeft from './components/PersistentDrawerLeft'\n\nexport default function App() {\n    return (\n      <PersistentDrawerLeft />\n    )\n}\n"],"sourceRoot":""}